I"s<p>在我们的日常开发工作中，文本溢出截断省略是很常见的一种需考虑的业务场景细节。看上去 “稀松平常” ，但在实现上却有不同的区分，是单行截断还是多行截断？多行的截断判断是基于行数还是基于高度？这些问题之下，都有哪些实现方案？他们之间的差异性和场景适应性又是如何？</p>

<p>一般来说，在做这样文字截断效果时我们更多是希望：</p>

<ul>
  <li>兼容性好，对各大主流浏览器有好的支持</li>
  <li>响应式截断，根据不同宽度做出调整</li>
  <li>文本超出范围才显示省略号，否则不显示省略号</li>
  <li>省略号位置显示刚好</li>
</ul>

<p>基于上述的准则，下面我们通过编码实践，给出一些答案。</p>

<h1 id="单行文本溢出省略">单行文本溢出省略</h1>

<p><strong>核心 CSS 语句</strong></p>

<ul>
  <li>overflow: hidden；（文字长度超出限定宽度，则隐藏超出的内容）</li>
  <li>white-space: nowrap；（设置文字在一行显示，不能换行）</li>
  <li>text-overflow: ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）</li>
</ul>

<p><strong>优点</strong></p>

<ul>
  <li>无兼容问题</li>
  <li>响应式截断</li>
  <li>文本溢出范围才显示省略号，否则不显示省略号</li>
  <li>省略号位置显示刚好</li>
</ul>

<p><strong>短板</strong></p>

<ul>
  <li>只支持单行文本截断</li>
</ul>

<p><strong>适用场景</strong></p>

<ul>
  <li>适用于单行文本溢出显示省略号的情况</li>
</ul>

<p><strong>Demo</strong></p>

<pre><code class="language-html">&lt;div class="demo"&gt;
      床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光
&lt;/div&gt;
</code></pre>

<pre><code class="language-css">.demo {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
</code></pre>

<p><strong>效果示例</strong></p>

<p><img src="" alt="" /></p>

<h1 id="多行文本溢出省略按行数">多行文本溢出省略（按行数）</h1>

<h2 id="-纯-css-实现方案">△ 纯 CSS 实现方案</h2>

<p><strong>核心 CSS 语句</strong></p>

<ul>
  <li>-webkit-line-clamp: 2；（用来限制在一个块元素显示的文本的行数, 2 表示最多显示 2 行。 为了实现该效果，它需要组合其他的WebKit属性）</li>
  <li>display: -webkit-box；（和 1 结合使用，将对象作为弹性伸缩盒子模型显示 ）</li>
  <li>-webkit-box-orient: vertical；（和 1 结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）</li>
  <li>overflow: hidden；（文本溢出限定的宽度就隐藏内容）</li>
  <li>text-overflow: ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本)</li>
</ul>

<p><strong>优点</strong></p>

<ul>
  <li>响应式截断</li>
  <li>文本溢出范围才显示省略号，否则不显示省略号</li>
  <li>省略号显示位置刚好</li>
</ul>

<p><strong>短板</strong></p>

<ul>
  <li>兼容性一般： -webkit-line-clamp 属性只有 WebKit 内核的浏览器才支持</li>
</ul>

<p><img src="https://lien-1258580758.cos.ap-shanghai.myqcloud.com/blog-img/16_text-overflow/1.png" alt="" /></p>

<p><strong>适用场景</strong></p>

<ul>
  <li>多适用于移动端页面，因为移动设备浏览器更多是基于 WebKit 内核</li>
</ul>

<p><strong>Demo</strong></p>

<pre><code class="language-html">&lt;div class="demo"&gt;
      床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光床前明月光
&lt;/div&gt;
</code></pre>

<pre><code class="language-css">.demo {
  display: -webkit-box;
  overflow: hidden;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
</code></pre>

<p><strong>效果示例</strong></p>

<p><img src="" alt="" /></p>

<h2 id="-基于-javascript-的实现方案">△ 基于 JavaScript 的实现方案</h2>

<p><strong>优点</strong></p>

<ul>
  <li>无兼容问题</li>
  <li>响应式截断</li>
  <li>文本溢出范围才显示省略号，否则不显示省略号</li>
</ul>

<p><strong>短板</strong></p>

<ul>
  <li>需要 JS 实现，背离展示和行为相分离原则</li>
  <li>文本为中英文混合时，省略号显示位置略有偏差</li>
</ul>

<p><strong>适用场景</strong></p>

<ul>
  <li>适用于响应式截断，多行文本溢出省略的情况</li>
</ul>

<p><strong>Demo</strong></p>

<p>当前仅适用于文本为中文，若文本中有英文，可自行修改</p>

:ET